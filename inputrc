set editing-mode vi

set show-mode-in-prompt on
#set vi-ins-mode-string "+"
#set vi-cmd-mode-string ":"

set keymap vi-command

set show-all-if-ambiguous on

# Ignore case
set completion-ignore-case on

# on menu-complete, first display the common prefix, then cycle through the
# options when hitting TAB
# menu-complete-display-prefix on



$if mode=vi

    #======================================================================
    set keymap vi-command

    "gg": beginning-of-history
    "G": end-of-history

    # Insert the arguments from the last command
    "\C-P": "i !!*"
    "\C-p": "a $(!!)"

    #======================================================================
    set keymap vi-insert
    "jk": vi-movement-mode

    # Insert the arguments from the last command
    "\C-b": "!!*"
    "\C-p": "$(!!)"




    # Needed because binding 'p' in command mode above wipes its insert mode
    # function, too. This fixes that, and will insert 'p' when you type 'p'.
    #"p": self-insert
    #"r": self-insert

#
#    #cycle thru completions.
#    "\e/": menu-complete
#
#    # wrap previous command in $() and edit beginning of line
#    "\C-w": '\e-I $(\eA)\eI'
#
#    # Edit options before rerunning previous command, eg: ls a b c -> ls -al a b c
#    "\C-o": "\e-0eli "
#
#
#    # vim style history search
#    "\e[A": history-search-backward
#    "\e[B": history-search-forward
$endif

# return to previous directory
#"\ez": 'cd -\015'


# TODO - read and understand more of what I can do here.
# https://www.reddit.com/r/commandline/comments/e6l5l/short_guide_to_custom_bashreadline_key_bindings/
