" We use a vim
set incsearch   
set ruler
set tw=0
set showcmd	
set showmatch " show matching brackets 
set cspc=4 " cscope - # directory components shown
set nocsverb  "don't be noisy about adding cscope databases
set nu
set vb t_vb= "turn off that darn beep

set hls

set ts=4
set sw=4
set et



" Next/Previus buffer
map <F3> :bp<CR>
map <F4> :bn<CR>


" Quickfix 
map <F5> :cp<CR>
map <F6> :cc<CR>
map <F7> :cn<CR>

" Quickfix w/ task list
map <C-F5> :lp<CR>
map <C-F6> :lc<CR>
map <C-F7> :lne<CR>

map <F8> :make<CR> 
map <C-F8> :call UpdateCscope()<CR>
map <silent> <F12> :BufExplorer<CR>
noremap <leader>be :BufExplorer<CR>
map <M-F11> :NERDTree<CR>
set autochdir


filetype plugin on

" Automatic code folding 
autocmd BufReadPost *.hpp,*.hh,*.cpp,*.h,*.c,*.cc,*.java set fdm=syntax 

set wildmenu

" New in version 7.0.3 - color columns 
if version > 702 
set colorcolumn=+1
endif

set textwidth=101

set wildignore+=*.o,*.ko,*.a,*.so
set bg=dark

" CTRL+movement keys switch windows 
map <C-H> <C-W>h
map <C-J> <C-W>j
map <C-K> <C-W>k
map <C-L> <C-W>l

inoremap jk <ESC>

"autocmd CursorMovedI * if pumvisible() == 0|pclose|endif
"autocmd InsertLeave * if pumvisible() == 0|pclose|endif

let Tlist_Ctags_Cmd="/usr/bin/ctags"

noremap  <leader>ev :vsplit $MYVIMRC<cr>
noremap  <leader>sv :source $MYVIMRC<cr>

set tags=./tags


"quote/bracket/paaren word 
nnoremap ," viw<esc>a"<esc>hbi"<esc>lel
nnoremap ,( viw<esc>a)<esc>hbi(<esc>lel
nnoremap ,[ viw<esc>a]<esc>hbi[<esc>lel
vnoremap ," <esc>`>a"<esc>`<i"<esc>
vnoremap ,( <esc>`>a)<esc>`<i(<esc>
vnoremap ,[ <esc>`>a]<esc>`<i[<esc>

noremap ,nt :NERDTreeToggle<CR>
noremap ,tl :TlistToggle<CR>

autocmd FileType javascript nnoremap <buffer> <localleader>c I//
autocmd FileType c nnoremap <buffer> <localleader>c I//
autocmd FileType c++ nnoremap <buffer> <localleader>c I//
autocmd FileType python     nnoremap <buffer> <localleader>c I#<esc>


autocmd FileType javascript :iabbrev <buffer> iff if ( ) {}<left><left><left><left><left>
autocmd FileType c :iabbrev <buffer> iff if ( ) {}<left><left><left><left><left>
autocmd FileType c++ :iabbrev <buffer> iff if ( ) {}<left><left><left><left><left>
autocmd FileType python     :iabbrev <buffer> iff if:<right>


" async complete {{{

" Tab completion
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
inoremap <expr> <cr> pumvisible() ? "\<C-y>" : "\<cr>"

" Force refresh completion
imap <c-space> <Plug>(asyncomplete_force_refresh)

"let g:asyncomplete_auto_popup = 0
let g:asyncomplete_remove_duplicates = 1

" }}}


"set makeprg=make\ -C\ ~/Documents/dev/sdrw/build 
